/*! \mainpage Omicron
 * \tableofcontents
 * Omicron is a software tool designed to perform the [Q-transform](https://en.wikipedia.org/wiki/Constant-Q_transform) of a time series.
 * This type of time-frequency decomposition offers a multi-resolution [spectrogram](https://en.wikipedia.org/wiki/Spectrogram) of the input signal. This spectrogram can be visualized in user-friendly web reports. Moreover, a signal-to-noise ratio threshold can be applied to the spectrogram pixels to produce "triggers".
 *
 * Omicron has been derived from a well-known 'burst-type' search pipeline called [Q-pipeline](https://gwic.ligo.org/assets/docs/theses/Chatterji_Thesis.pdf) (a.k.a Omega). The original matlab code has been replaced by an optimized C++ architecture to offer a fast processing of the data. As a result, Omicron is able to process many data streams in parallel. 
 * \anchor main_gw170817_spectro
 * \image html gw170817_spectro.png "Omicron high-resolution spectrogram of GW170817."
 *
 * \section main_download_sec Download Omicron
 * First, define your source directory and your installation directories. For example:
 * \verbatim
export OMICRON_SRCDIR=${HOME}/src
export OMICRON_INSTALLDIR=${HOME}/opt/Omicron
mkdir -p ${OMICRON_SRCDIR} ${OMICRON_INSTALLDIR}
 \endverbatim
 * You can download the Omicron source tarball from [gitlab](https://git.ligo.org/virgo/virgoapp/Omicron/-/releases):
 * \verbatim
 cd ${OMICRON_SRCDIR}
 wget https://git.ligo.org/virgo/virgoapp/Omicron/-/archive/[X.Y.Z]/Omicron-[X.Y.Z].tar.gz
 tar -xzf Omicron-[X.Y.Z].tar.gz
 \endverbatim
 * where `[X.Y.Z]` is the Omicron version of your choice.
 *
 * Alternatively, you can get a development copy of the Omicron software using git and select a release tag:
 * \verbatim
 cd ${OMICRON_SRCDIR}
 git clone https://git.ligo.org/virgo/virgoapp/Omicron.git
 cd Omicron/
 git checkout [X.Y.Z]
 \endverbatim
 * 
 * \section main_build_sec Build Omicron
 * The Omicron package relies on several external packages which you must install on your machine:
 * - [GWOLLUM](https://virgo.docs.ligo.org/virgoapp/GWOLLUM/) libraries offers many analysis tools needed by Omicron.
 * - [CMake](https://cmake.org/) is used to build Omicron.
 * - [Doxygen](http://www.doxygen.nl/) is used to build the Omicron documentation. This package is optional.
 *
 * In this section we give step-by-step instructions to build Omicron for UNIX (bash/sh) systems.
 \verbatim
# go to the source directory
cd ${OMICRON_SRCDIR}/Omicron/

# create the build directory
mkdir ./build/; cd ./build/

# configure Omicron
cmake -DCMAKE_INSTALL_PREFIX=${OMICRON_INSTALLDIR} ${OMICRON_SRCDIR}/Omicron

# compile Omicron
make

# install Omicron
make install
\endverbatim
 * An environment script has been generated. It must be sourced before using Omicron:
 * \verbatim
source ${OMICRON_INSTALLDIR}/etc/omicron.env.sh
\endverbatim
 * You can test that Omicron is correctly installed by typing:
  * \verbatim
omicron version
\endverbatim
 * If you have the [Doxygen](http://www.doxygen.nl/) software installed in your machine,
 * you can access Omicron documentation with a web browser at `file://${OMICRON_INSTALLDIR}/share/doc/Omicron/html/index.html`.
 *
 * \section main_program_sec User programs
 * Omicron comes with a collection of user programs using Omicron libraries:
 * - omicron.cc: this is the main program to perform a Q-transform analysis of your data.
 * - omicron-print.cc: this program reads omicron trigger files and prints trigger parameters.
 * - omicron-plot.cc: this program reads omicron trigger files and plots the trigger parameters.
 * - omicron-listfile.cc: this program discovers the list of Omicron trigger files.
 * - omicron-scanfile.cc: this program scans a list of trigger files and detect corrupted files.
 * - omicron-metric-print.cc: this program masures the so-called omicron-metric for a given structure in the time-frequency plane.
 *
 * \section main_develop_sec Develop a project on top of Omicron libraries
 * Omicron offers a set of [C++ classes](annotated.html) to run and visualize Q-transforms analyses.
 * The corresponding libraries can be used to develop user programs or projects:
 * - [C++ classes](annotated.html): documentation for Omicron C++ classes.
 *
 * \section main_documentation_sec Documentation and links
 *
 * \subsection main_documentation_general_sec General
 *
 * - [Omicron published paper](https://doi.org/10.1016/j.softx.2020.100620) ([arXiv](https://arxiv.org/abs/2007.11374))
 * - [Omicron technical note](https://tds.virgo-gw.eu/ql/?c=10651)
 * - [Omicron gitlab page](https://git.ligo.org/virgo/virgoapp/Omicron): this is the code repository.
 * - [Omicron wiki](https://git.ligo.org/virgo/virgoapp/Omicron/-/wikis/home): additional and specific documentation is provided there.
 * - [Omicron issue tracker](https://git.ligo.org/virgo/virgoapp/Omicron/-/issues): use this link to report bugs, request new features...
 * - [Laboratoire de Physique des 2 infinis Irène Joliot-Curie (IJCLab)](https://www.ijclab.in2p3.fr)
 *  
 * \subsection main_documentation_related_sec Related pages
 *
 * See all documentation pages in the [Related Pages](./pages.html)
 *
 * \section main_author_sec Authors
 * <b>Florent Robinet</b> - Laboratoire de Physique des 2 Infinis Irène Joliot-Curie (IJCLab) Orsay, France - <a href="mailto:florent.robinet@ijclab.in2p3.fr">contact</a>
 */

